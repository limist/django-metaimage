django-metaimage is an app for the Django web framework; it provides a
wrapper of useful functionality around ImageModel from
django-photologue, which it requires.  It is GPL-licensed.  

Some of the code was inspired/borrowed from Pinax's photo app, but I
have removed Pinax dependencies, so that django-metaimage only
requires Django itself, django-photologue, and django-tagging.


OVERVIEW
--------

Most websites need to deal with images, sometimes uploaded from users,
or retrieved from a remote site.  The django-metaimage package is
especially helpful with the latter case: you can supply just the URL
of a remote image, and it will be downloaded and saved locally.
Overall, this app is an alternative way to use the powerful
django-photologue app with your site.

The main class, MetaImage, enables storing useful metadata about
images, including a title, caption, notes about the source
(e.g. copyrights), and tags.  MetaImage attributes include:

- title, slug, caption, source_note (for attribution text, copyrights, etc.)
- source_url
- privacy 
- safetylevel
- tags


Key MetaImage methods include:

- A save() method that can automatically download a remote image to
  your filesystem, so you'll always have a local copy should the
  remote image vanish into the Internet aether.  
- render(), which spits out the HTML to show your image on a webpage.

Basic views, tests, and templates are also provided.


INSTALLATION
------------

Install via "pip install django-metaimage" or from source. Then just
add "photologue", "tagging" and "metaimage" to your Django project
settings.py file, in the INSTALLED_APPS list, e.g.

::

    INSTALLED_APPS = [
        ...
        "photologue",
        "tagging",
        "metaimage",
        ...
        ]


And then, do a "manage.py syncdb" to create the database-side tables
needed.

Optional: Templates are provided for adding, editing, viewing, etc. of
metaimages; they're very basic and meant only as a starting point.
But if you want to use them directly, do at least these two things: 1)
get and install django-uni-form > 0.7.0 which some of the templates
rely on, and also update your setting.py INSTALLED_APPS to list
"uni_form"; 2) update your site-wide urls.py, e.g.

::

    urlpatterns = patterns("",
        ...
        (r"^metaimage/", include("metaimage.urls")),
        ...
        )


Also, many of the django-metaimage templates have templatetags
dependencies that are commented out, as they require Pinax or other
packages; you can activate them as needed, but be sure to update your
INSTALLED_APPS accordingly.


BUGS
----

Please log bugs/issues using django-metaimage's github site,
http://github.com/limist/django-metaimage/issues

